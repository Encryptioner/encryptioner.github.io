(()=>{[{'revision':'6ca9ac1a74470dfa30416a6249a3939d','url':'/index.html'},{'revision':null,'url':'/static/css/main.e1593ac3.css'},{'revision':null,'url':'/static/js/158.b3c3f052.chunk.js'},{'revision':null,'url':'/static/js/161.80340729.chunk.js'},{'revision':null,'url':'/static/js/194.18ad3b66.chunk.js'},{'revision':null,'url':'/static/js/245.21d6fc3b.chunk.js'},{'revision':null,'url':'/static/js/262.cc5c3d15.chunk.js'},{'revision':null,'url':'/static/js/454.29447e53.chunk.js'},{'revision':null,'url':'/static/js/742.7f81eb19.chunk.js'},{'revision':null,'url':'/static/js/765.cba44919.chunk.js'},{'revision':null,'url':'/static/js/85.f2f2753f.chunk.js'},{'revision':null,'url':'/static/js/928.a5595300.chunk.js'},{'revision':null,'url':'/static/js/974.8f70539c.chunk.js'},{'revision':null,'url':'/static/js/about.362bdacf.chunk.js'},{'revision':null,'url':'/static/js/featured-projects.3c71387c.chunk.js'},{'revision':null,'url':'/static/js/footer.3398c66f.chunk.js'},{'revision':null,'url':'/static/js/main.374cff48.js'},{'revision':null,'url':'/static/js/other-projects.aec4171f.chunk.js'},{'revision':null,'url':'/static/media/Monsieur-Pomme.5860767b9cc93ae9dd18.ttf'},{'revision':null,'url':'/static/media/about.7f6df869a382d7eccb06.md'},{'revision':null,'url':'/static/media/landing.6e28f061a9c1bd5d7cc4.md'},{'revision':null,'url':'/static/media/pointer2.547d76ae42b3659b0fbe.svg'}];const e="portfolio-cache-".concat("v1.0.0"),t=["/","/index.html","/offline.html","/manifest.json"],n="cache-first",c="cache-first",i="network-first",r="network-first",o="network-first";self.addEventListener("install",n=>{console.log("[ServiceWorker] Installing..."),n.waitUntil(caches.open(e).then(e=>(console.log("[ServiceWorker] Caching static assets"),e.addAll(t.map(e=>new Request(e,{cache:"reload"}))))).then(()=>(console.log("[ServiceWorker] Skip waiting"),self.skipWaiting())).catch(e=>{console.error("[ServiceWorker] Install failed:",e)}))}),self.addEventListener("activate",t=>{console.log("[ServiceWorker] Activating..."),t.waitUntil(caches.keys().then(t=>Promise.all(t.filter(t=>t.startsWith("portfolio-cache-")&&t!==e).map(e=>(console.log("[ServiceWorker] Deleting old cache:",e),caches.delete(e))))).then(()=>(console.log("[ServiceWorker] Claiming clients"),self.clients.claim())))}),self.addEventListener("fetch",t=>{const{request:s}=t;if(new URL(s.url).origin!==location.origin)return;const a=function(e){const t=new URL(e.url),s=t.pathname.split(".").pop().toLowerCase();if(["jpg","jpeg","png","gif","webp","svg","ico"].includes(s))return n;if(["woff","woff2","ttf","otf","eot"].includes(s))return c;if("js"===s)return i;if("css"===s)return r;if("html"===s||!s)return o;return"network-only"}(s);"cache-first"===a?t.respondWith(async function(t){const n=await caches.match(t);if(n)return n;try{const n=await fetch(t);if(n.ok){(await caches.open(e)).put(t,n.clone())}return n}catch(c){return console.error("[ServiceWorker] Fetch failed:",c),caches.match("/offline.html")||new Response("Offline",{status:503,statusText:"Service Unavailable"})}}(s)):"network-first"===a?t.respondWith(async function(t){try{const n=await fetch(t);if(n.ok){(await caches.open(e)).put(t,n.clone())}return n}catch(n){console.log("[ServiceWorker] Network failed, trying cache:",t.url);const e=await caches.match(t);return e||(caches.match("/offline.html")||new Response("Offline",{status:503,statusText:"Service Unavailable"}))}}(s)):t.respondWith(fetch(s))}),self.addEventListener("message",e=>{e.data&&"SKIP_WAITING"===e.data.type&&self.skipWaiting()})})();