{"version":3,"file":"static/js/195.21ff1141.chunk.js","mappings":"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","sources":["shared/content/Content.tsx","shared/navbar/logo-type/LogoType.tsx","shared/color-mode-button/ColorModeButton.tsx","shared/navbar/drawer/Drawer.tsx","shared/navbar/Navbar.tsx","shared/socials/Socials.tsx","utils/Functions.ts"],"sourcesContent":["import { FC, useEffect, useState } from \"react\";\n\nimport { Text, Stack, StyleProps, Link, UnorderedList } from \"@chakra-ui/react\";\nimport ReactMarkdown from \"react-markdown\";\n\nimport common from \"content/common/common.json\";\nimport landing from \"content/landing/landing-config.json\";\nimport featuredProjects from \"content/featured-projects/featured-projects-config.json\";\nimport otherProjects from \"content/other-projects/other-projects-config.json\";\nimport about from \"content/about/about-config.json\";\n\nimport LandingMd from \"content/landing/landing.md\";\nimport AboutMd from \"content/about/about.md\";\n\nexport const configs = {\n    common,\n    landing,\n    featuredProjects,\n    otherProjects,\n    about,\n};\n\ninterface State {\n    landing: string;\n    about: string;\n}\n\nexport enum MarkdownFile {\n    Landing = \"landing\",\n    About = \"about\",\n}\n\nconst Mapper = {\n    [MarkdownFile.Landing]: LandingMd,\n    [MarkdownFile.About]: AboutMd,\n};\n\nexport const useContent = (fileName: MarkdownFile) => {\n    const [data, setData] = useState<State>({ landing: \"\", about: \"\" });\n\n    useEffect(() => {\n        fetch(Mapper[fileName])\n            .then((res) => res.text())\n            .then((text) => setData((data) => ({ ...data, [fileName]: text })));\n    }, [fileName]);\n\n    return data;\n};\n\ninterface Props extends StyleProps {\n    children?: string;\n}\n\nexport const Content: FC<Props> = ({ children, ...rest }) => {\n    return (\n        <Stack spacing=\"4\">\n            <ReactMarkdown\n                components={{\n                    p: ({ node, ...props }) => <Text {...rest} {...props} />,\n                    a: ({ node, ...props }) => (\n                        <Link href={props.href} target=\"_blank\" color=\"primary.200\" {...props} />\n                    ),\n                    ul: ({ node, ...props }) => {\n                        const { ordered, ...rest } = props;\n\n                        return (\n                            <UnorderedList\n                                {...rest}\n                                data-aos=\"fade\"\n                                listStylePosition=\"inside\"\n                                display=\"grid\"\n                                gridTemplateColumns=\"repeat(2, 1fr)\"\n                                listStyleType=\"'â€£ '\"\n                                fontWeight=\"600\"\n                            />\n                        );\n                    },\n                    li: ({ node, ...props }) => {\n                        const { ordered, ...rest } = props;\n\n                        return <li data-aos=\"flip-up\" data-aos-delay={props.index * 100 + 400} {...rest} />;\n                    },\n                }}\n            >\n                {children as string}\n            </ReactMarkdown>\n        </Stack>\n    );\n};\n","import { FC } from \"react\";\n\nimport { Box, Text, useBreakpointValue } from \"@chakra-ui/react\";\n\ninterface Props {\n    info: {\n        mobile: string;\n        desktop: string;\n        role: string;\n    };\n}\n\nexport const LogoType: FC<Props> = ({ info }) => {\n    const variantSignature = useBreakpointValue({ base: info.mobile, md: info.desktop });\n\n\n    return (\n        <Box transition=\"all 0.2s ease-in-out\" _hover={{ cursor: \"pointer\", color: \"primary.600\" }}>\n            <Text fontSize={{ base: \"3xl\", md: \"4xl\" }} lineHeight=\"1\" fontFamily=\"Signature\" mb={{ base: 0, md: -2 }}>\n                {variantSignature}\n            </Text>\n            {info.role.length > 0 &&\n                <Text as='i' fontSize={{ base: \"xs\", md: \"sm\" }}>\n                    {info.role}\n                </Text>\n            }\n        </Box>\n    );\n};\n","import { FC } from \"react\";\n\nimport { HStack, IconButton, StyleProps, useColorMode, useColorModeValue } from \"@chakra-ui/react\";\n\nimport { MoonIcon, SunIcon } from \"utils/Icons\";\n\nexport const ColorModeButton: FC<StyleProps> = (props) => {\n    const color = useColorModeValue(\"gray.800\", \"white\");\n    const { colorMode, toggleColorMode } = useColorMode();\n\n    return (\n        <HStack {...props}>\n            <IconButton\n                aria-label=\"appearance\"\n                bg=\"transparent\"\n                color={color}\n                fontSize=\"lg\"\n                _hover={{ color: \"primary.500\" }}\n                _active={{ bg: \"transparent\" }}\n                icon={colorMode === \"light\" ? <MoonIcon /> : <SunIcon />}\n                variant=\"ghost\"\n                size=\"xs\"\n                onClick={() => {\n                    toggleColorMode();\n                    window.scrollBy(0, 1);\n                    window.scrollBy(0, -1);\n                }}\n                w=\"32px\"\n                h=\"32px\"\n            />\n        </HStack>\n    );\n};\n","import { FC, useRef } from \"react\";\n\nimport {\n    Box,\n    Button,\n    Drawer,\n    DrawerBody,\n    DrawerHeader,\n    DrawerOverlay,\n    DrawerContent,\n    DrawerCloseButton,\n    useDisclosure,\n    IconButton,\n    StyleProps,\n    Flex,\n    VStack,\n    useColorModeValue,\n} from \"@chakra-ui/react\";\n\nimport { ColorModeButton } from \"shared/color-mode-button/ColorModeButton\";\nimport { AboutPageId, WorkPageId } from \"utils/useScroll\";\nimport { MenuIcon } from \"utils/Icons\";\nimport { Socials } from \"shared/socials/Socials\";\nimport { onResumeOpen } from \"utils/Functions\";\n\ninterface Props extends StyleProps {\n    onSectionClick: (section: string) => void;\n    currentPage: string;\n}\n\nexport const MenuDrawer: FC<Props> = ({ onSectionClick, currentPage, ...props }) => {\n    const { isOpen, onOpen, onClose } = useDisclosure();\n    const btnRef = useRef<any>(null);\n    const navItemColor = useColorModeValue(\"gray.800\", \"white\");\n\n    return (\n        <Box {...props}>\n            <Button\n                as={IconButton}\n                variant=\"icon\"\n                ref={btnRef}\n                onClick={onOpen}\n                aria-label=\"open drawer\"\n                fontSize=\"lg\"\n                color=\"primary.500\"\n                icon={<MenuIcon />}\n                px=\"0\"\n            />\n            <Drawer isOpen={isOpen} placement=\"right\" onClose={onClose} autoFocus={false}>\n                <DrawerOverlay />\n                <DrawerContent>\n                    <DrawerHeader px=\"4\">\n                        <Flex justifyContent=\"space-between\">\n                            <ColorModeButton />\n                            <DrawerCloseButton position=\"relative\" top=\"0\" right=\"0\" />\n                        </Flex>\n                    </DrawerHeader>\n\n                    <DrawerBody>\n                        <VStack spacing=\"6\" my=\"16\">\n                            <Button\n                                variant=\"link\"\n                                color={navItemColor}\n                                textDecoration=\"underline\"\n                                textDecorationThickness=\"2px\"\n                                textDecorationColor={currentPage === WorkPageId ? \"primary.500\" : \"transparent\"}\n                                onClick={() => {\n                                    onClose();\n                                    setTimeout(() => {\n                                        onSectionClick(WorkPageId);\n                                    }, 250);\n                                }}\n                                data-aos=\"fade\"\n                                data-aos-delay=\"200\"\n                                fontWeight=\"600\"\n                                fontSize=\"2xl\"\n                            >\n                                Work\n                            </Button>\n                            <Button\n                                variant=\"link\"\n                                color={navItemColor}\n                                textDecoration={currentPage === AboutPageId ? \"underline\" : \"none\"}\n                                textDecorationThickness=\"2px\"\n                                textDecorationColor=\"primary.500\"\n                                onClick={() => {\n                                    onClose();\n                                    setTimeout(() => {\n                                        onSectionClick(AboutPageId);\n                                    }, 250);\n                                }}\n                                data-aos=\"fade\"\n                                data-aos-delay=\"300\"\n                                fontWeight=\"600\"\n                                fontSize=\"2xl\"\n                            >\n                                About\n                            </Button>\n                            <Button\n                                variant=\"link\"\n                                color=\"primary.500\"\n                                onClick={onResumeOpen}\n                                data-aos=\"fade\"\n                                data-aos-delay=\"400\"\n                                fontWeight=\"600\"\n                                fontSize=\"2xl\"\n                            >\n                                Resume\n                            </Button>\n                        </VStack>\n                        <Flex justifyContent=\"center\" mt=\"16\">\n                            <Socials delay={100} resume={false} />\n                        </Flex>\n                    </DrawerBody>\n                </DrawerContent>\n            </Drawer>\n        </Box>\n    );\n};\n","import { FC } from \"react\";\n\nimport { Box, Button, Container, Flex, HStack, useColorModeValue } from \"@chakra-ui/react\";\n\nimport { configs } from \"shared/content/Content\";\nimport { LogoType } from \"shared/navbar/logo-type/LogoType\";\nimport { bgDark, bgLight } from \"theme\";\nimport { onResumeOpen } from \"utils/Functions\";\nimport { AboutPageId, useScroll, WorkPageId } from \"utils/useScroll\";\nimport { MenuDrawer } from \"./drawer/Drawer\";\nimport { ColorModeButton } from \"shared/color-mode-button/ColorModeButton\";\n\nexport const Navbar: FC = () => {\n    const bg = useColorModeValue(bgLight, bgDark);\n    const navItemColor = useColorModeValue(\"gray.800\", \"white\");\n    const currentPage = useScroll();\n\n    const toSection = (section: string) => {\n        document.getElementById(section)?.scrollIntoView({ behavior: \"smooth\" });\n    };\n\n    return (\n        <Box bg={bg} position=\"fixed\" top=\"0\" w=\"100%\" left=\"50%\" transform=\"translate(-50%)\" zIndex=\"10\">\n            <Container py=\"4\" px=\"4\" data-aos=\"fade-down\" data-aos-duration=\"500\" data-aos-delay=\"100\">\n                <Flex justifyContent=\"space-between\" alignItems=\"center\">\n                    <LogoType info={configs.common.logoType} />\n                    <Flex alignItems=\"center\" display={{ base: \"none\", md: \"flex\" }}>\n                        <HStack spacing=\"8\" mr=\"6\">\n                            <Button\n                                variant=\"link\"\n                                color={navItemColor}\n                                textDecoration=\"underline\"\n                                textDecorationThickness=\"2px\"\n                                textDecorationColor={currentPage === WorkPageId ? \"primary.500\" : \"transparent\"}\n                                onClick={() => toSection(WorkPageId)}\n                                data-aos=\"fade\"\n                                data-aos-delay=\"200\"\n                            >\n                                Work\n                            </Button>\n                            <Button\n                                variant=\"link\"\n                                color={navItemColor}\n                                textDecoration={currentPage === AboutPageId ? \"underline\" : \"none\"}\n                                textDecorationThickness=\"2px\"\n                                textDecorationColor=\"primary.500\"\n                                onClick={() => toSection(AboutPageId)}\n                                data-aos=\"fade\"\n                                data-aos-delay=\"300\"\n                            >\n                                About\n                            </Button>\n                            <Button variant=\"link\" onClick={onResumeOpen} data-aos=\"fade\" data-aos-delay=\"400\">\n                                Resume\n                            </Button>\n                        </HStack>\n                        <ColorModeButton />\n                    </Flex>\n\n                    <MenuDrawer\n                        currentPage={currentPage}\n                        onSectionClick={toSection}\n                        display={{ base: \"block\", md: \"none\" }}\n                    />\n                </Flex>\n            </Container>\n        </Box>\n    );\n};\n","import { FC } from \"react\";\n\nimport { Button, HStack, IconButton, Tooltip } from \"@chakra-ui/react\";\n\nimport { configs } from \"shared/content/Content\";\nimport { onResumeOpen, open } from \"utils/Functions\";\nimport { FacebookIcon, GitHubIcon, InstagramIcon, LinkedInIcon, MailIcon, YoutubeIcon } from \"utils/Icons\";\n\nconst LinksToIconMapper: Record<string, JSX.Element> = {\n    linkedin: <LinkedInIcon />,\n    github: <GitHubIcon />,\n    facebook: <FacebookIcon />,\n    instagram: <InstagramIcon />,\n    youtube: <YoutubeIcon />,\n    mail: <MailIcon />,\n};\n\ninterface Props {\n    resume?: boolean;\n    exclude?: Array<string>;\n    delay?: number;\n}\n\nexport const Socials: FC<Props> = ({ resume = true, exclude, delay = 800 }) => {\n    return (\n        <HStack spacing=\"5\">\n            {resume && (\n                <Button data-aos=\"fade\" data-aos-delay={delay} size=\"lg\" borderRadius=\"xl\" mr=\"2\" onClick={onResumeOpen}>\n                    Resume\n                </Button>\n            )}\n            {configs.common.socials.map(\n                (social, idx) =>\n                    !exclude?.includes(social.type) && (\n                        <Tooltip key={social.type} label={social.type} textTransform=\"capitalize\">\n                            <Button\n                                p=\"0\"\n                                aria-label={`${social.type}-button`}\n                                as={IconButton}\n                                variant=\"icon\"\n                                data-aos=\"fade\"\n                                data-aos-delay={idx * 100 + delay}\n                                fontSize={social.type === \"mail\" ? \"24pt\" : \"20pt\"}\n                                icon={LinksToIconMapper[social.type]}\n                                onClick={() => open(social.link)}\n                            />\n                        </Tooltip>\n                    ),\n            )}\n        </HStack>\n    );\n};\n","import { configs } from \"shared/content/Content\";\n\nexport const open = (link: string) => window.open(link, \"_blank\");\n\nexport const onResumeOpen = () => {\n    open(configs.common.resume);\n};\n\nexport const onMailTo = () => {\n    open(\"mailto:\" + configs.common.email);\n};\n"],"names":["configs","common","landing","featuredProjects","otherProjects","about","MarkdownFile","Mapper","Landing","LandingMd","About","AboutMd","useContent","fileName","data","setData","useState","useEffect","fetch","then","res","text","Content","_ref","children","rest","_jsx","Stack","spacing","ReactMarkdown","components","p","_ref2","node","props","Text","a","_ref3","Link","href","target","color","ul","_ref4","ordered","UnorderedList","listStylePosition","display","gridTemplateColumns","listStyleType","fontWeight","li","_ref5","index","LogoType","info","variantSignature","useBreakpointValue","base","mobile","md","desktop","_jsxs","Box","transition","_hover","cursor","fontSize","lineHeight","fontFamily","mb","role","length","as","ColorModeButton","useColorModeValue","colorMode","toggleColorMode","useColorMode","HStack","IconButton","bg","_active","icon","MoonIcon","SunIcon","variant","size","onClick","window","scrollBy","w","h","MenuDrawer","onSectionClick","currentPage","isOpen","onOpen","onClose","useDisclosure","btnRef","useRef","navItemColor","Button","ref","MenuIcon","px","Drawer","placement","autoFocus","DrawerOverlay","DrawerContent","DrawerHeader","Flex","justifyContent","DrawerCloseButton","position","top","right","DrawerBody","VStack","my","textDecoration","textDecorationThickness","textDecorationColor","WorkPageId","setTimeout","AboutPageId","onResumeOpen","mt","Socials","delay","resume","Navbar","bgLight","bgDark","useScroll","toSection","section","_document$getElementB","document","getElementById","scrollIntoView","behavior","left","transform","zIndex","Container","py","alignItems","logoType","mr","LinksToIconMapper","linkedin","LinkedInIcon","github","GitHubIcon","facebook","FacebookIcon","instagram","InstagramIcon","youtube","YoutubeIcon","mail","MailIcon","exclude","borderRadius","socials","map","social","idx","includes","type","Tooltip","label","textTransform","concat","open","link","onMailTo","email"],"sourceRoot":""}