{"version":3,"file":"static/js/985.bfdd246d.chunk.js","mappings":"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","sources":["pages/sliders/project-slider-card/ProjectSliderCard.tsx","pages/sliders/Sliders.tsx","../node_modules/.pnpm/@chakra-ui+image@1.1.10_@chakra-ui+system@1.12.1_react@17.0.2/node_modules/@chakra-ui/image/dist/chakra-ui-image.esm.js","../node_modules/.pnpm/@chakra-ui+media-query@2.0.4_@chakra-ui+system@1.12.1_@chakra-ui+theme@1.14.1_react@17.0.2/node_modules/@chakra-ui/media-query/dist/chakra-ui-media-query.esm.js"],"sourcesContent":["import { FC } from \"react\";\nimport { Box, Image, Text, VStack, HStack, useColorModeValue, Link } from \"@chakra-ui/react\";\nimport { FiExternalLink } from \"react-icons/fi\";\n\nexport interface SliderProject {\n    id: string;\n    title: string;\n    tabs: string[];\n    category: string;\n    details: string;\n    hoverDescription?: string;\n    image: string;\n    link: string;\n}\n\ninterface ProjectSliderCardProps {\n    project: SliderProject;\n}\n\nexport const ProjectSliderCard: FC<ProjectSliderCardProps> = ({ project }) => {\n    const projectName = project.title;\n    const primaryLink = project.link;\n\n    // Theme colors\n    const cardBg = useColorModeValue(\"white\", \"gray.800\");\n    const borderColor = useColorModeValue(\"gray.100\", \"gray.700\");\n    const hoverBorderColor = useColorModeValue(\"primary.200\", \"primary.600\");\n    const titleColor = useColorModeValue(\"gray.800\", \"white\");\n    const metaColor = useColorModeValue(\"primary.500\", \"primary.300\");\n    const descColor = useColorModeValue(\"gray.600\", \"gray.300\");\n    const fallbackBg = useColorModeValue(\"primary.50\", \"primary.900\");\n    const fallbackColor = useColorModeValue(\"primary.600\", \"primary.300\");\n\n    return (\n        <Box\n            bg={cardBg}\n            borderRadius=\"xl\"\n            overflow=\"hidden\"\n            shadow=\"sm\"\n            border=\"1px\"\n            borderColor={borderColor}\n            transition=\"all 0.3s ease\"\n            _groupHover={{\n                shadow: \"xl\",\n                transform: \"translateY(-4px) scale(1.02)\",\n                borderColor: hoverBorderColor,\n            }}\n            h=\"160px\"\n            w=\"200px\"\n            display=\"flex\"\n            flexDirection=\"column\"\n            position=\"relative\"\n            role=\"group\"\n            flexShrink={0}\n        >\n            {/* Project Image */}\n            <Box \n                position=\"relative\"\n                h=\"100px\"\n                overflow=\"hidden\"\n            >\n                <Image\n                    src={project.image}\n                    alt={projectName}\n                    w=\"100%\"\n                    h=\"100%\"\n                    objectFit=\"cover\"\n                    transition=\"all 0.3s ease\"\n                    _groupHover={{ \n                        transform: \"scale(1.1)\" \n                    }}\n                    fallback={\n                        <Box\n                            w=\"100%\"\n                            h=\"100%\"\n                            bg={fallbackBg}\n                            display=\"flex\"\n                            alignItems=\"center\"\n                            justifyContent=\"center\"\n                        >\n                            <Text fontSize=\"lg\" color={fallbackColor} fontWeight=\"bold\">\n                                {projectName.substring(0, 2).toUpperCase()}\n                            </Text>\n                        </Box>\n                    }\n                />\n                \n                {/* External Link Icon */}\n                {primaryLink && (\n                    <Link\n                        href={primaryLink}\n                        isExternal\n                        position=\"absolute\"\n                        top={2}\n                        right={2}\n                        opacity={0}\n                        _groupHover={{ opacity: 1 }}\n                        transition=\"all 0.3s ease\"\n                        bg=\"blackAlpha.700\"\n                        borderRadius=\"md\"\n                        p={1.5}\n                        cursor=\"pointer\"\n                        _hover={{\n                            bg: \"blackAlpha.800\",\n                            transform: \"scale(1.1)\"\n                        }}\n                        zIndex={5}\n                    >\n                        <FiExternalLink size=\"14px\" color=\"white\" />\n                    </Link>\n                )}\n                \n                {/* Hover Information Overlay */}\n                <Box\n                    position=\"absolute\"\n                    top={0}\n                    left={0}\n                    right={0}\n                    bottom={0}\n                    bg=\"linear-gradient(135deg, rgba(0,0,0,0.85) 0%, rgba(0,0,0,0.75) 100%)\"\n                    opacity={0}\n                    _groupHover={{ opacity: 1 }}\n                    transition=\"all 0.4s cubic-bezier(0.4, 0, 0.2, 1)\"\n                    display=\"flex\"\n                    alignItems=\"center\"\n                    justifyContent=\"center\"\n                    backdropFilter=\"blur(6px)\"\n                    borderRadius=\"xl\"\n                    overflow=\"hidden\"\n                >\n                    {/* Animated background pattern */}\n                    <Box\n                        position=\"absolute\"\n                        top={0}\n                        left={0}\n                        right={0}\n                        bottom={0}\n                        opacity={0.1}\n                        bgGradient=\"radial(circle at 30% 30%, primary.400, transparent 70%)\"\n                        _groupHover={{\n                            animation: \"pulse 2s ease-in-out infinite\"\n                        }}\n                    />\n                    \n                    {/* Main content */}\n                    <VStack \n                        spacing={2.5} \n                        color=\"white\" \n                        textAlign=\"center\" \n                        p={4}\n                        transform=\"translateY(10px)\"\n                        _groupHover={{\n                            transform: \"translateY(0)\"\n                        }}\n                        transition=\"transform 0.4s cubic-bezier(0.4, 0, 0.2, 1) 0.1s\"\n                    >\n                        {/* Project Title with glow effect */}\n                        {!project.hoverDescription && (\n                            <Text\n                                fontSize=\"md\"\n                                fontWeight=\"bold\"\n                                lineHeight=\"1.2\"\n                                textShadow=\"0 0 10px rgba(255,255,255,0.3)\"\n                                opacity={0}\n                                _groupHover={{ opacity: 1 }}\n                                transition=\"opacity 0.4s ease 0.2s\"\n                            >\n                                {projectName}\n                            </Text>\n                        )}\n                        \n                        {/* Animated divider */}\n                        <Box\n                            w=\"0px\"\n                            h=\"2px\"\n                            bg=\"linear-gradient(90deg, transparent, primary.300, transparent)\"\n                            opacity={0.8}\n                            _groupHover={{ w: \"40px\" }}\n                            transition=\"width 0.5s ease 0.3s\"\n                            borderRadius=\"full\"\n                            boxShadow=\"0 0 8px rgba(79, 209, 197, 0.4)\"\n                        />\n                        \n                        {/* Hover Description */}\n                        {project.hoverDescription && (\n                            <Text\n                                fontSize=\"xs\"\n                                opacity={0}\n                                maxW=\"140px\"\n                                lineHeight=\"1.3\"\n                                textAlign=\"center\"\n                                _groupHover={{ opacity: 0.9 }}\n                                transition=\"opacity 0.4s ease 0.4s\"\n                            >\n                                {project.hoverDescription}\n                            </Text>\n                        )}\n                        \n                    </VStack>\n                </Box>\n                \n                {/* Overlay gradient for better text readability */}\n                <Box\n                    position=\"absolute\"\n                    bottom={0}\n                    left={0}\n                    right={0}\n                    h=\"30px\"\n                    bgGradient=\"linear(to-t, blackAlpha.400, transparent)\"\n                />\n            </Box>\n\n            {/* Content */}\n            <VStack \n                spacing={2} \n                p={3} \n                align=\"stretch\" \n                flex=\"1\"\n                justify=\"center\"\n            >\n                {/* Project Name */}\n                {primaryLink ? (\n                    <Link\n                        href={primaryLink}\n                        isExternal\n                        fontSize=\"sm\"\n                        fontWeight=\"bold\"\n                        color={titleColor}\n                        textAlign=\"center\"\n                        cursor=\"pointer\"\n                        _hover={{\n                            color: metaColor,\n                            textDecoration: \"none\"\n                        }}\n                        transition=\"color 0.2s ease\"\n                    >\n                        <Text noOfLines={1} cursor=\"pointer !important\">\n                            {projectName}\n                        </Text>\n                    </Link>\n                ) : (\n                    <Text\n                        fontSize=\"sm\"\n                        fontWeight=\"bold\"\n                        color={titleColor}\n                        noOfLines={1}\n                        textAlign=\"center\"\n                    >\n                        {projectName}\n                    </Text>\n                )}\n\n                {/* Category and Details - Two columns */}\n                <HStack justify=\"space-between\" align=\"flex-start\" spacing={2}>\n                    <Text\n                        fontSize=\"xs\"\n                        color={metaColor}\n                        fontWeight=\"medium\"\n                        flex=\"1\"\n                        noOfLines={1}\n                    >\n                        {project.category}\n                    </Text>\n                    <Text\n                        fontSize=\"xs\"\n                        color={descColor}\n                        textAlign=\"right\"\n                        flex=\"1\"\n                        noOfLines={1}\n                    >\n                        {project.details}\n                    </Text>\n                </HStack>\n            </VStack>\n        </Box>\n    );\n};","import { FC, useState, useEffect, useRef } from \"react\";\nimport {\n    Box,\n    Container,\n    Text,\n    HStack,\n    Button,\n    VStack,\n    Flex,\n    IconButton,\n    useBreakpointValue,\n    useColorModeValue,\n} from \"@chakra-ui/react\";\nimport { FiChevronLeft, FiChevronRight } from \"react-icons/fi\";\nimport { ProjectSliderCard, SliderProject } from \"./project-slider-card/ProjectSliderCard\";\n\n// Import configs\nimport slidersConfig from \"content/sliders/sliders-config.json\";\n\ninterface SlidersConfig {\n    enabled: boolean;\n    title: string;\n    description: string;\n    defaultTab: string;\n    tabs: Array<{\n        id: string;\n        label: string;\n        description: string;\n    }>;\n    projects: SliderProject[];\n}\n\nconst config = slidersConfig satisfies SlidersConfig;\n\nexport const Sliders: FC = () => {\n    const [activeTab, setActiveTab] = useState(config.defaultTab);\n    const [currentIndex, setCurrentIndex] = useState(0);\n    const [isPaused, setIsPaused] = useState(false);\n    const autoScrollRef = useRef<NodeJS.Timeout | null>(null);\n\n    // Fixed card dimensions\n    const cardWidth = 200;\n    const cardGap = 12;\n    const cardTotalWidth = cardWidth + cardGap;\n\n    // Calculate container width and cards per view\n    const containerMaxWidth = useBreakpointValue({\n        base: 280, // ~1 card + some margin\n        sm: 580, // ~2 cards + gaps\n        md: 880, // ~4 cards + gaps  \n        lg: 1180, // ~5 cards + gaps\n        xl: 1380 // ~6 cards + gaps\n    }) || 280;\n    \n    // Calculate actual cards that fit within container width\n    const cardsPerView = Math.floor(containerMaxWidth / cardTotalWidth);\n\n    // Get projects based on active tab\n    const getActiveProjects = (): SliderProject[] => {\n        return config.projects.filter(project => \n            project.tabs.includes(activeTab)\n        );\n    };\n\n    const activeProjects = getActiveProjects();\n    \n    // Calculate max scroll index - ensure last card is always fully visible\n    // If we have enough cards to fill the view, we can scroll up to (totalCards - cardsPerView)\n    // But we need to ensure there's always at least one card visible\n    const maxIndex = activeProjects.length > cardsPerView \n        ? activeProjects.length - cardsPerView \n        : 0;\n\n    // Theme colors\n    const bgColor = useColorModeValue(\"gray.50\", \"gray.900\");\n    const titleColor = useColorModeValue(\"gray.800\", \"white\");\n    const descColor = useColorModeValue(\"gray.600\", \"gray.400\");\n    const tabBgColor = useColorModeValue(\"white\", \"gray.800\");\n    const tabActiveBg = useColorModeValue(\"primary.500\", \"primary.600\");\n    const tabActiveColor = useColorModeValue(\"white\", \"white\");\n    const tabInactiveColor = useColorModeValue(\"gray.600\", \"gray.400\");\n    const arrowBg = useColorModeValue(\"white\", \"gray.800\");\n    const arrowColor = useColorModeValue(\"gray.600\", \"gray.400\");\n    const arrowHoverBg = useColorModeValue(\"primary.50\", \"primary.900\");\n    const arrowHoverColor = useColorModeValue(\"primary.600\", \"primary.300\");\n    const dotColor = useColorModeValue(\"gray.300\", \"gray.600\");\n    const dotActiveColor = useColorModeValue(\"primary.500\", \"primary.400\");\n    const arrowBorderColor = useColorModeValue(\"gray.200\", \"gray.600\");\n    const scrollbarThumb = useColorModeValue('gray.300', 'gray.600');\n    const scrollbarThumbHover = useColorModeValue('gray.400', 'gray.500');\n    const tabHoverBg = useColorModeValue(\"gray.100\", \"gray.700\");\n    const activeTabDescColor = useColorModeValue(\"gray.500\", \"gray.400\");\n\n    // Auto-scroll functionality (5 seconds, circular)\n    useEffect(() => {\n        if (!isPaused && activeProjects.length > cardsPerView) {\n            autoScrollRef.current = setInterval(() => {\n                setCurrentIndex(prev => {\n                    // Circular: if at end, go to beginning\n                    if (prev >= maxIndex) {\n                        return 0;\n                    }\n                    return prev + 1;\n                });\n            }, 5000);\n        }\n\n        return () => {\n            if (autoScrollRef.current) {\n                clearInterval(autoScrollRef.current);\n            }\n        };\n    }, [isPaused, maxIndex, activeProjects.length, cardsPerView]);\n\n    // Don't render if disabled\n    if (!config.enabled) {\n        return null;\n    }\n\n    // Tab change handler\n    const handleTabChange = (tabId: string) => {\n        setActiveTab(tabId);\n        setCurrentIndex(0); // Reset slider position when switching tabs\n    };\n\n    // Navigation handlers\n    const goToPrevious = () => {\n        setCurrentIndex(prev => {\n            // Circular: if at beginning, go to end\n            if (prev <= 0) {\n                return maxIndex;\n            }\n            return prev - 1;\n        });\n    };\n\n    const goToNext = () => {\n        setCurrentIndex(prev => {\n            // Circular: if at end, go to beginning\n            if (prev >= maxIndex) {\n                return 0;\n            }\n            return prev + 1;\n        });\n    };\n\n    const showNavigation = activeProjects.length > cardsPerView;\n\n    return (\n        <Box \n            id=\"sliders\"\n            pt={{ base: 12 }} \n            pb={{ base: 8 }}\n        >\n            <Container \n                bg={bgColor}\n                pt={{ base: 8, md: 12 }} \n                pb={{ base: 4, md: 8 }}\n                maxW=\"container.xl\"\n            >\n                {/* Section Header */}\n                <VStack spacing={2} textAlign=\"center\" mb={6}>\n                    <Text\n                        fontSize={{ base: \"xl\", md: \"2xl\" }}\n                        fontWeight=\"bold\"\n                        color={titleColor}\n                        data-aos=\"fade-down\"\n                        data-aos-offset=\"200\"\n                        lineHeight=\"1.2\"\n                    >\n                        {config.title}\n                    </Text>\n                    <Text\n                        fontSize=\"sm\"\n                        color={descColor}\n                        maxW=\"500px\"\n                        data-aos=\"fade\"\n                        data-aos-delay=\"100\"\n                        data-aos-offset=\"200\"\n                    >\n                        {config.description}\n                    </Text>\n                </VStack>\n\n                {/* Tab Navigation - Responsive with Horizontal Scroll */}\n                <Box \n                    mb={4}\n                    data-aos=\"fade-up\"\n                    data-aos-delay=\"200\"\n                    data-aos-offset=\"200\"\n                    w=\"100%\"\n                >\n                    <Box\n                        display=\"flex\"\n                        justifyContent=\"center\"\n                        w=\"100%\"\n                    >\n                        <Box\n                            bg={tabBgColor}\n                            borderRadius=\"lg\"\n                            p={1}\n                            shadow=\"sm\"\n                            overflowX=\"auto\"\n                            maxW={{ base: \"100%\", md: \"auto\" }}\n                            sx={{\n                                '&::-webkit-scrollbar': {\n                                    height: '4px',\n                                },\n                                '&::-webkit-scrollbar-track': {\n                                    background: 'transparent',\n                                },\n                                '&::-webkit-scrollbar-thumb': {\n                                    background: scrollbarThumb,\n                                    borderRadius: '2px',\n                                },\n                                '&::-webkit-scrollbar-thumb:hover': {\n                                    background: scrollbarThumbHover,\n                                },\n                            }}\n                        >\n                            <HStack \n                                spacing={1} \n                                flexWrap=\"nowrap\"\n                                minW={{ base: `${config.tabs.length * 90}px`, md: \"auto\" }}\n                            >\n                                {config.tabs.map((tab) => (\n                                    <Button\n                                        key={tab.id}\n                                        onClick={() => handleTabChange(tab.id)}\n                                        size=\"sm\"\n                                        variant=\"ghost\"\n                                        bg={activeTab === tab.id ? tabActiveBg : \"transparent\"}\n                                        color={activeTab === tab.id ? tabActiveColor : tabInactiveColor}\n                                        fontWeight={activeTab === tab.id ? \"semibold\" : \"medium\"}\n                                        minW={{ base: \"80px\", md: \"100px\" }}\n                                        flexShrink={0}\n                                        _hover={{\n                                            bg: activeTab === tab.id ? tabActiveBg : tabHoverBg,\n                                        }}\n                                        transition=\"all 0.2s ease\"\n                                        borderRadius=\"md\"\n                                        fontSize=\"sm\"\n                                        px={3}\n                                        position=\"relative\"\n                                    >\n                                        {tab.label}\n                                    </Button>\n                                ))}\n                            </HStack>\n                        </Box>\n                    </Box>\n                </Box>\n\n                {/* Active Tab Description */}\n                {(() => {\n                    const activeTabConfig = config.tabs.find(tab => tab.id === activeTab);\n                    return activeTabConfig?.description && (\n                        <Box\n                            textAlign=\"center\"\n                            mb={4}\n                            opacity={0}\n                            animation=\"fadeIn 0.3s ease 0.1s forwards\"\n                            sx={{\n                                '@keyframes fadeIn': {\n                                    '0%': { opacity: 0, transform: 'translateY(-8px)' },\n                                    '100%': { opacity: 1, transform: 'translateY(0)' }\n                                }\n                            }}\n                        >\n                            <Text\n                                fontSize=\"xs\"\n                                color={activeTabDescColor}\n                                fontWeight=\"medium\"\n                                letterSpacing=\"0.02em\"\n                                maxW=\"400px\"\n                                mx=\"auto\"\n                                position=\"relative\"\n                                _before={{\n                                    content: '\"\"',\n                                    position: \"absolute\",\n                                    left: \"0\",\n                                    top: \"50%\",\n                                    width: \"20px\",\n                                    height: \"1px\",\n                                    bg: \"linear-gradient(90deg, transparent, currentColor)\",\n                                    opacity: 0.3,\n                                    transform: \"translateY(-50%) translateX(-28px)\",\n                                }}\n                                _after={{\n                                    content: '\"\"',\n                                    position: \"absolute\",\n                                    right: \"0\",\n                                    top: \"50%\",\n                                    width: \"20px\",\n                                    height: \"1px\",\n                                    bg: \"linear-gradient(90deg, currentColor, transparent)\",\n                                    opacity: 0.3,\n                                    transform: \"translateY(-50%) translateX(28px)\",\n                                }}\n                            >\n                                {activeTabConfig.description}\n                            </Text>\n                        </Box>\n                    );\n                })()}\n\n                {/* Projects Slider */}\n                {activeProjects.length > 0 && (\n                    <Box \n                        position=\"relative\"\n                        onMouseEnter={() => setIsPaused(true)}\n                        onMouseLeave={() => setIsPaused(false)}\n                    >\n                        {/* Desktop Navigation Arrows */}\n                        {showNavigation && (\n                            <>\n                                <IconButton\n                                    aria-label=\"Previous projects\"\n                                    icon={<FiChevronLeft />}\n                                    position=\"absolute\"\n                                    left={{ base: \"10px\", lg: \"-50px\" }}\n                                    top=\"50%\"\n                                    transform=\"translateY(-50%)\"\n                                    zIndex={2}\n                                    size=\"md\"\n                                    borderRadius=\"full\"\n                                    bg={arrowBg}\n                                    color={arrowColor}\n                                    shadow=\"md\"\n                                    border=\"1px\"\n                                    borderColor={arrowBorderColor}\n                                    _hover={{ \n                                        bg: arrowHoverBg,\n                                        color: arrowHoverColor,\n                                        transform: \"translateY(-50%) scale(1.1)\"\n                                    }}\n                                    onClick={goToPrevious}\n                                    display={{ base: \"none\", md: \"flex\" }}\n                                    transition=\"all 0.2s ease\"\n                                />\n                                <IconButton\n                                    aria-label=\"Next projects\"\n                                    icon={<FiChevronRight />}\n                                    position=\"absolute\"\n                                    right={{ base: \"10px\", lg: \"-50px\" }}\n                                    top=\"50%\"\n                                    transform=\"translateY(-50%)\"\n                                    zIndex={2}\n                                    size=\"md\"\n                                    borderRadius=\"full\"\n                                    bg={arrowBg}\n                                    color={arrowColor}\n                                    shadow=\"md\"\n                                    border=\"1px\"\n                                    borderColor={arrowBorderColor}\n                                    _hover={{ \n                                        bg: arrowHoverBg,\n                                        color: arrowHoverColor,\n                                        transform: \"translateY(-50%) scale(1.1)\"\n                                    }}\n                                    onClick={goToNext}\n                                    display={{ base: \"none\", md: \"flex\" }}\n                                    transition=\"all 0.2s ease\"\n                                />\n                            </>\n                        )}\n\n                        {/* Cards Container */}\n                        <Box \n                            overflow=\"hidden\"\n                            maxW={`${containerMaxWidth}px`}\n                            mx=\"auto\"\n                        >\n                            <Flex\n                                transition=\"transform 0.5s ease\"\n                                transform={`translateX(-${currentIndex * cardTotalWidth}px)`}\n                                align=\"stretch\"\n                            >\n                                {activeProjects.map((project, index) => (\n                                    <Box\n                                        key={project.id}\n                                        mr={index < activeProjects.length - 1 ? \"12px\" : \"0\"}\n                                        flexShrink={0}\n                                    >\n                                        <ProjectSliderCard project={project} />\n                                    </Box>\n                                ))}\n                            </Flex>\n                        </Box>\n\n                        {/* Mobile Navigation & Dots */}\n                        {showNavigation && (\n                            <VStack spacing={3} mt={4}>\n                                {/* Dots Indicator */}\n                                <HStack spacing={2} justify=\"center\">\n                                    {Array.from({ length: maxIndex + 1 }, (_, i) => (\n                                        <Box\n                                            key={i}\n                                            w={2}\n                                            h={2}\n                                            borderRadius=\"full\"\n                                            bg={currentIndex === i ? dotActiveColor : dotColor}\n                                            cursor=\"pointer\"\n                                            onClick={() => setCurrentIndex(i)}\n                                            transition=\"all 0.2s\"\n                                            _hover={{\n                                                bg: currentIndex === i ? dotActiveColor : \"gray.400\"\n                                            }}\n                                        />\n                                    ))}\n                                </HStack>\n\n                                {/* Mobile Navigation Buttons */}\n                                <HStack spacing={4} display={{ base: \"flex\", md: \"none\" }}>\n                                    <IconButton\n                                        aria-label=\"Previous projects\"\n                                        icon={<FiChevronLeft />}\n                                        size=\"sm\"\n                                        onClick={goToPrevious}\n                                        variant=\"outline\"\n                                        colorScheme=\"primary\"\n                                    />\n                                    <IconButton\n                                        aria-label=\"Next projects\"\n                                        icon={<FiChevronRight />}\n                                        size=\"sm\"\n                                        onClick={goToNext}\n                                        variant=\"outline\"\n                                        colorScheme=\"primary\"\n                                    />\n                                </HStack>\n                            </VStack>\n                        )}\n                    </Box>\n                )}\n\n                {/* No Projects Message */}\n                {activeProjects.length === 0 && (\n                    <Text\n                        textAlign=\"center\"\n                        color={descColor}\n                        fontSize=\"md\"\n                        py={8}\n                    >\n                        No projects available for this category.\n                    </Text>\n                )}\n            </Container>\n        </Box>\n    );\n};","import { forwardRef, chakra } from '@chakra-ui/system';\nimport { omit, __DEV__ } from '@chakra-ui/utils';\nimport * as React from 'react';\nimport { useState, useEffect, useRef, useCallback } from 'react';\nimport { useSafeLayoutEffect } from '@chakra-ui/hooks';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\n/**\n * React hook that loads an image in the browser,\n * and lets us know the `status` so we can show image\n * fallback if it is still `pending`\n *\n * @returns the status of the image loading progress\n *\n * @example\n *\n * ```jsx\n * function App(){\n *   const status = useImage({ src: \"image.png\" })\n *   return status === \"loaded\" ? <img src=\"image.png\" /> : <Placeholder />\n * }\n * ```\n */\nfunction useImage(props) {\n  var loading = props.loading,\n      src = props.src,\n      srcSet = props.srcSet,\n      onLoad = props.onLoad,\n      onError = props.onError,\n      crossOrigin = props.crossOrigin,\n      sizes = props.sizes,\n      ignoreFallback = props.ignoreFallback;\n\n  var _useState = useState(\"pending\"),\n      status = _useState[0],\n      setStatus = _useState[1];\n\n  useEffect(function () {\n    setStatus(src ? \"loading\" : \"pending\");\n  }, [src]);\n  var imageRef = useRef();\n  var load = useCallback(function () {\n    if (!src) return;\n    flush();\n    var img = new Image();\n    img.src = src;\n    if (crossOrigin) img.crossOrigin = crossOrigin;\n    if (srcSet) img.srcset = srcSet;\n    if (sizes) img.sizes = sizes;\n    if (loading) img.loading = loading;\n\n    img.onload = function (event) {\n      flush();\n      setStatus(\"loaded\");\n      onLoad == null ? void 0 : onLoad(event);\n    };\n\n    img.onerror = function (error) {\n      flush();\n      setStatus(\"failed\");\n      onError == null ? void 0 : onError(error);\n    };\n\n    imageRef.current = img;\n  }, [src, crossOrigin, srcSet, sizes, onLoad, onError, loading]);\n\n  var flush = function flush() {\n    if (imageRef.current) {\n      imageRef.current.onload = null;\n      imageRef.current.onerror = null;\n      imageRef.current = null;\n    }\n  };\n\n  useSafeLayoutEffect(function () {\n    /**\n     * If user opts out of the fallback/placeholder\n     * logic, let's bail out.\n     */\n    if (ignoreFallback) return undefined;\n\n    if (status === \"loading\") {\n      load();\n    }\n\n    return function () {\n      flush();\n    };\n  }, [status, load, ignoreFallback]);\n  /**\n   * If user opts out of the fallback/placeholder\n   * logic, let's just return 'loaded'\n   */\n\n  return ignoreFallback ? \"loaded\" : status;\n}\n\nvar _excluded = [\"htmlWidth\", \"htmlHeight\", \"alt\"],\n    _excluded2 = [\"fallbackSrc\", \"fallback\", \"src\", \"srcSet\", \"align\", \"fit\", \"loading\", \"ignoreFallback\", \"crossOrigin\"];\nvar NativeImage = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var htmlWidth = props.htmlWidth,\n      htmlHeight = props.htmlHeight,\n      alt = props.alt,\n      rest = _objectWithoutPropertiesLoose(props, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"img\", _extends({\n    width: htmlWidth,\n    height: htmlHeight,\n    ref: ref,\n    alt: alt\n  }, rest));\n});\n\n/**\n * React component that renders an image with support\n * for fallbacks\n *\n * @see Docs https://chakra-ui.com/image\n */\nvar Image$1 = /*#__PURE__*/forwardRef(function (props, ref) {\n  var fallbackSrc = props.fallbackSrc,\n      fallback = props.fallback,\n      src = props.src,\n      srcSet = props.srcSet,\n      align = props.align,\n      fit = props.fit,\n      loading = props.loading,\n      ignoreFallback = props.ignoreFallback,\n      crossOrigin = props.crossOrigin,\n      rest = _objectWithoutPropertiesLoose(props, _excluded2);\n  /**\n   * Defer to native `img` tag if `loading` prop is passed\n   * @see https://github.com/chakra-ui/chakra-ui/issues/1027\n   */\n\n\n  var shouldIgnore = loading != null || ignoreFallback || fallbackSrc === undefined && fallback === undefined; // if the user doesn't provide any kind of fallback we should ignore it\n\n  var status = useImage(_extends({}, props, {\n    ignoreFallback: shouldIgnore\n  }));\n\n  var shared = _extends({\n    ref: ref,\n    objectFit: fit,\n    objectPosition: align\n  }, shouldIgnore ? rest : omit(rest, [\"onError\", \"onLoad\"]));\n\n  if (status !== \"loaded\") {\n    /**\n     * If user passed a custom fallback component,\n     * let's render it here.\n     */\n    if (fallback) return fallback;\n    return /*#__PURE__*/React.createElement(chakra.img, _extends({\n      as: NativeImage,\n      className: \"chakra-image__placeholder\",\n      src: fallbackSrc\n    }, shared));\n  }\n\n  return /*#__PURE__*/React.createElement(chakra.img, _extends({\n    as: NativeImage,\n    src: src,\n    srcSet: srcSet,\n    crossOrigin: crossOrigin,\n    loading: loading,\n    className: \"chakra-image\"\n  }, shared));\n});\n\n/**\n * Fallback component for most SSR users who want to use the native `img` with\n * support for chakra props\n */\nvar Img = /*#__PURE__*/forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(chakra.img, _extends({\n    ref: ref,\n    as: NativeImage,\n    className: \"chakra-image\"\n  }, props));\n});\n\nif (__DEV__) {\n  Image$1.displayName = \"Image\";\n}\n\nexport { Image$1 as Image, Img, useImage };\n","import { useTheme } from '@chakra-ui/system';\nimport { isBrowser, __DEV__, memoizedGet, breakpoints, isArray, fromEntries, arrayToObjectNotation } from '@chakra-ui/utils';\nimport * as React from 'react';\nimport React__default from 'react';\nimport { useEnvironment } from '@chakra-ui/react-env';\n\nvar useSafeLayoutEffect = isBrowser ? React.useLayoutEffect : React.useEffect;\n/**\n * React hook that tracks state of a CSS media query\n *\n * @param query the media query to match\n */\n\nfunction useMediaQuery(query) {\n  var env = useEnvironment();\n  var queries = Array.isArray(query) ? query : [query];\n  var isSupported = isBrowser && \"matchMedia\" in env.window;\n\n  var _React$useState = React.useState(queries.map(function (query) {\n    return isSupported ? !!env.window.matchMedia(query).matches : false;\n  })),\n      matches = _React$useState[0],\n      setMatches = _React$useState[1]; // Specifying matches in the dependency list will cause the event listeners\n  // to unload and then load each time the dependency changes. This causes\n  // Media Query Events to be missed. The event listeners should only be unloaded\n  // when the component unloads.\n\n\n  useSafeLayoutEffect(function () {\n    if (!isSupported) return undefined;\n    var mediaQueryList = queries.map(function (query) {\n      return env.window.matchMedia(query);\n    });\n    var listenerList = mediaQueryList.map(function (_, index) {\n      var listener = function listener(mqlEvent) {\n        var queryIndex = mediaQueryList.findIndex(function (mediaQuery) {\n          return mediaQuery.media === mqlEvent.media;\n        }); // As the event listener is on the media query list, any time the\n        // listener is called, we know there is a change. There's no need\n        // to compare the previous matches with current. Using\n        // setMatches(matches => {...}) provides access to the current matches\n        // state.  Trying to access matches outside the setMatches function\n        // would provide data from the the time of instantiation (stale).\n\n        setMatches(function (matches) {\n          var currentMatches = matches.map(function (x) {\n            return x;\n          });\n          currentMatches[queryIndex] = mqlEvent.matches;\n          return currentMatches;\n        });\n      }; // Listening to the 'change' event on the Media Query List Object\n      // is more performant as the callback is only invoked when a specified\n      // media query is matched. Using addEventListener on the window object\n      // to listen for the resize event will call the callback on every\n      // viewport resize.\n\n\n      if (typeof mediaQueryList[index].addEventListener === \"function\") {\n        mediaQueryList[index].addEventListener(\"change\", listener);\n      } else {\n        mediaQueryList[index].addListener(listener);\n      }\n\n      return listener;\n    });\n    return function () {\n      mediaQueryList.forEach(function (_, index) {\n        if (typeof mediaQueryList[index].removeEventListener === \"function\") {\n          mediaQueryList[index].removeEventListener(\"change\", listenerList[index]);\n        } else {\n          mediaQueryList[index].removeListener(listenerList[index]);\n        }\n      });\n    };\n  }, []);\n  return matches;\n}\n\n/**\n * Visibility\n *\n * React component to control the visibility of its\n * children based on the current breakpoint\n */\nvar Visibility = function Visibility(props) {\n  var breakpoint = props.breakpoint,\n      hide = props.hide,\n      children = props.children;\n\n  var _useMediaQuery = useMediaQuery(breakpoint),\n      show = _useMediaQuery[0];\n\n  var isVisible = hide ? !show : show;\n  var rendered = isVisible ? children : null;\n  return rendered;\n};\n\nvar Hide = function Hide(props) {\n  var children = props.children;\n  var query = useQuery(props);\n  return /*#__PURE__*/React.createElement(Visibility, {\n    breakpoint: query,\n    hide: true\n  }, children);\n};\n\nif (__DEV__) {\n  Hide.displayName = \"Hide\";\n}\n\nvar Show = function Show(props) {\n  var children = props.children;\n  var query = useQuery(props);\n  return /*#__PURE__*/React.createElement(Visibility, {\n    breakpoint: query\n  }, children);\n};\n\nif (__DEV__) {\n  Show.displayName = \"Show\";\n}\n\nvar getBreakpoint = function getBreakpoint(theme, value) {\n  return memoizedGet(theme, \"breakpoints.\" + value, value);\n};\n\nfunction useQuery(props) {\n  var _props$breakpoint = props.breakpoint,\n      breakpoint = _props$breakpoint === void 0 ? \"\" : _props$breakpoint,\n      below = props.below,\n      above = props.above;\n  var theme = useTheme();\n  var bpBelow = getBreakpoint(theme, below);\n  var bpAbove = getBreakpoint(theme, above);\n  var query = breakpoint;\n\n  if (bpBelow) {\n    query = \"(max-width: \" + bpBelow + \")\";\n  } else if (bpAbove) {\n    query = \"(min-width: \" + bpAbove + \")\";\n  }\n\n  return query;\n}\n\n/**\n * React hook used to get the user's animation preference.\n */\n\nfunction usePrefersReducedMotion() {\n  var _useMediaQuery = useMediaQuery(\"(prefers-reduced-motion: reduce)\"),\n      prefersReducedMotion = _useMediaQuery[0];\n\n  return prefersReducedMotion;\n}\n/**\n * React hook for getting the user's color mode preference.\n */\n\nfunction useColorModePreference() {\n  var _useMediaQuery2 = useMediaQuery([\"(prefers-color-scheme: light)\", \"(prefers-color-scheme: dark)\"]),\n      isLight = _useMediaQuery2[0],\n      isDark = _useMediaQuery2[1];\n\n  if (isLight) return \"light\";\n  if (isDark) return \"dark\";\n  return undefined;\n}\n\n/**\n * React hook used to get the current responsive media breakpoint.\n *\n * @param [defaultBreakpoint=\"base\"] default breakpoint name\n * (in non-window environments like SSR)\n *\n * For SSR, you can use a package like [is-mobile](https://github.com/kaimallea/isMobile)\n * to get the default breakpoint value from the user-agent\n */\n\nfunction useBreakpoint(defaultBreakpoint // default value ensures SSR+CSR consistency\n) {\n  if (defaultBreakpoint === void 0) {\n    defaultBreakpoint = \"base\";\n  }\n\n  var _useTheme = useTheme(),\n      __breakpoints = _useTheme.__breakpoints;\n\n  var env = useEnvironment();\n  var queries = React__default.useMemo(function () {\n    var _breakpoints$details;\n\n    return (_breakpoints$details = __breakpoints == null ? void 0 : __breakpoints.details.map(function (_ref) {\n      var minMaxQuery = _ref.minMaxQuery,\n          breakpoint = _ref.breakpoint;\n      return {\n        breakpoint: breakpoint,\n        query: minMaxQuery.replace(\"@media screen and \", \"\")\n      };\n    })) != null ? _breakpoints$details : [];\n  }, [__breakpoints]);\n\n  var _React$useState = React__default.useState(function () {\n    if (defaultBreakpoint) {\n      // use default breakpoint to ensure render consistency in SSR + CSR environments\n      // => first render on the client has to match the render on the server\n      var fallbackBreakpointDetail = queries.find(function (_ref2) {\n        var breakpoint = _ref2.breakpoint;\n        return breakpoint === defaultBreakpoint;\n      });\n\n      if (fallbackBreakpointDetail) {\n        return fallbackBreakpointDetail.breakpoint;\n      }\n    }\n\n    if (env.window.matchMedia) {\n      // set correct breakpoint on first render if no default breakpoint was provided\n      var matchingBreakpointDetail = queries.find(function (_ref3) {\n        var query = _ref3.query;\n        return env.window.matchMedia(query).matches;\n      });\n\n      if (matchingBreakpointDetail) {\n        return matchingBreakpointDetail.breakpoint;\n      }\n    }\n\n    return undefined;\n  }),\n      currentBreakpoint = _React$useState[0],\n      setCurrentBreakpoint = _React$useState[1];\n\n  React__default.useEffect(function () {\n    var allUnregisterFns = queries.map(function (_ref4) {\n      var breakpoint = _ref4.breakpoint,\n          query = _ref4.query;\n      var mediaQueryList = env.window.matchMedia(query);\n\n      if (mediaQueryList.matches) {\n        setCurrentBreakpoint(breakpoint);\n      }\n\n      var handleChange = function handleChange(ev) {\n        if (ev.matches) {\n          setCurrentBreakpoint(breakpoint);\n        }\n      }; // add media query listener\n\n\n      if (typeof mediaQueryList.addEventListener === \"function\") {\n        mediaQueryList.addEventListener(\"change\", handleChange);\n      } else {\n        mediaQueryList.addListener(handleChange);\n      } // return unregister fn\n\n\n      return function () {\n        if (typeof mediaQueryList.removeEventListener === \"function\") {\n          mediaQueryList.removeEventListener(\"change\", handleChange);\n        } else {\n          mediaQueryList.removeListener(handleChange);\n        }\n      };\n    });\n    return function () {\n      allUnregisterFns.forEach(function (unregister) {\n        return unregister();\n      });\n    };\n  }, [queries, __breakpoints, env.window]);\n  return currentBreakpoint;\n}\n\nfunction getClosestValue(values, breakpoint, breakpoints$1) {\n  if (breakpoints$1 === void 0) {\n    breakpoints$1 = breakpoints;\n  }\n\n  var index = Object.keys(values).indexOf(breakpoint);\n\n  if (index !== -1) {\n    return values[breakpoint];\n  }\n\n  var stopIndex = breakpoints$1.indexOf(breakpoint);\n\n  while (stopIndex >= 0) {\n    var key = breakpoints$1[stopIndex];\n\n    if (values[key] != null) {\n      index = stopIndex;\n      break;\n    }\n\n    stopIndex -= 1;\n  }\n\n  if (index !== -1) {\n    var _key = breakpoints$1[index];\n    return values[_key];\n  }\n\n  return undefined;\n}\n\n/**\n * React hook for getting the value for the current breakpoint from the\n * provided responsive values object.\n *\n * @param values\n * @param [defaultBreakpoint] default breakpoint name\n * (in non-window environments like SSR)\n *\n * For SSR, you can use a package like [is-mobile](https://github.com/kaimallea/isMobile)\n * to get the default breakpoint value from the user-agent\n *\n * @example\n * const width = useBreakpointValue({ base: '150px', md: '250px' })\n */\n\nfunction useBreakpointValue(values, defaultBreakpoint) {\n  var _theme$__breakpoints;\n\n  var breakpoint = useBreakpoint(defaultBreakpoint);\n  var theme = useTheme();\n  if (!breakpoint) return undefined;\n  /**\n   * Get the sorted breakpoint keys from the provided breakpoints\n   */\n\n  var breakpoints = Array.from(((_theme$__breakpoints = theme.__breakpoints) == null ? void 0 : _theme$__breakpoints.keys) || []);\n  var obj = isArray(values) ? fromEntries(Object.entries(arrayToObjectNotation(values, breakpoints)).map(function (_ref) {\n    var key = _ref[0],\n        value = _ref[1];\n    return [key, value];\n  })) : values;\n  return getClosestValue(obj, breakpoint, breakpoints);\n}\n\nexport { Hide, Show, useBreakpoint, useBreakpointValue, useColorModePreference, useMediaQuery, usePrefersReducedMotion, useQuery };\n"],"names":["ProjectSliderCard","_ref","project","projectName","title","primaryLink","link","cardBg","useColorModeValue","borderColor","hoverBorderColor","titleColor","metaColor","descColor","fallbackBg","fallbackColor","_jsxs","Box","bg","borderRadius","overflow","shadow","border","transition","_groupHover","transform","h","w","display","flexDirection","position","role","flexShrink","children","_jsx","Image","src","image","alt","objectFit","fallback","alignItems","justifyContent","Text","fontSize","color","fontWeight","substring","toUpperCase","Link","href","isExternal","top","right","opacity","p","cursor","_hover","zIndex","FiExternalLink","size","left","bottom","backdropFilter","bgGradient","animation","VStack","spacing","textAlign","hoverDescription","lineHeight","textShadow","boxShadow","maxW","align","flex","justify","textDecoration","noOfLines","HStack","category","details","config","Sliders","activeTab","setActiveTab","useState","defaultTab","currentIndex","setCurrentIndex","isPaused","setIsPaused","autoScrollRef","useRef","containerMaxWidth","useBreakpointValue","base","sm","md","lg","xl","cardsPerView","Math","floor","cardWidth","activeProjects","projects","filter","tabs","includes","maxIndex","length","bgColor","tabBgColor","tabActiveBg","tabActiveColor","tabInactiveColor","arrowBg","arrowColor","arrowHoverBg","arrowHoverColor","dotColor","dotActiveColor","arrowBorderColor","scrollbarThumb","scrollbarThumbHover","tabHoverBg","activeTabDescColor","useEffect","current","setInterval","prev","clearInterval","enabled","goToPrevious","goToNext","showNavigation","id","pt","pb","Container","mb","description","overflowX","sx","height","background","flexWrap","minW","concat","map","tab","Button","onClick","handleTabChange","tabId","variant","px","label","activeTabConfig","find","letterSpacing","mx","_before","content","width","_after","onMouseEnter","onMouseLeave","_Fragment","IconButton","icon","FiChevronLeft","FiChevronRight","Flex","index","mr","mt","Array","from","_","i","colorScheme","py","_extends","Object","assign","target","arguments","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","indexOf","_excluded","_excluded2","NativeImage","React","props","ref","htmlWidth","htmlHeight","rest","Image$1","forwardRef","fallbackSrc","srcSet","fit","loading","ignoreFallback","crossOrigin","shouldIgnore","undefined","status","onLoad","onError","sizes","_useState","setStatus","imageRef","load","useCallback","flush","img","srcset","onload","event","onerror","error","useSafeLayoutEffect","useImage","shared","objectPosition","omit","chakra","as","className","__DEV__","displayName","isBrowser","values","defaultBreakpoint","_theme$__breakpoints","breakpoint","__breakpoints","useTheme","env","useEnvironment","queries","React__default","_breakpoints$details","minMaxQuery","query","replace","_React$useState","fallbackBreakpointDetail","_ref2","window","matchMedia","matchingBreakpointDetail","_ref3","matches","currentBreakpoint","setCurrentBreakpoint","allUnregisterFns","_ref4","mediaQueryList","handleChange","ev","addEventListener","addListener","removeEventListener","removeListener","forEach","unregister","useBreakpoint","theme","breakpoints","breakpoints$1","stopIndex","getClosestValue","isArray","fromEntries","entries","arrayToObjectNotation"],"sourceRoot":""}